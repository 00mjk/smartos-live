/*
 * CDDL HEADER START
 *
 * The contents of this file are subject to the terms of the
 * Common Development and Distribution License, Version 1.0 only
 * (the "License").  You may not use this file except in compliance
 * with the License.
 *
 * You can obtain a copy of the license at http://smartos.org/CDDL
 *
 * See the License for the specific language governing permissions
 * and limitations under the License.
 *
 * When distributing Covered Code, include this CDDL HEADER in each
 * file.
 *
 * If applicable, add the following below this CDDL HEADER, with the
 * fields enclosed by brackets "[]" replaced with your own identifying
 * information: Portions Copyright [yyyy] [name of copyright owner]
 *
 * CDDL HEADER END
 *
 * Copyright (c) 2014, Joyent, Inc. All rights reserved.
 *
 */

/*
 * queue.js: a simple work queue
 */

exports = module.exports = Queue;

function Queue(opts) {
    if (!opts) {
        opts = {};
    }

    this.workers = opts.workers || 1;
    this.run     = opts.hasOwnProperty('run') ? opts.run : true;
    this.jobs    = [];
    this.working = 0;

    return (this);
}

Queue.prototype.enqueue = function (job) {
    this.jobs.push(job);

    var self = this;

    process.nextTick(function () {
        self.work();
    });
}

Queue.prototype.work = function () {
    // are we paused?
    if (this.run !== true) {
        return;
    }

    // workers are busy
    if (this.working == this.workers) {
        return;
    }

    // queue is empty
    if (this.jobs.length == 0) {
        return;
    }

    // increment the working count
    this.working++;

    var self = this;
    var job  = this.jobs.shift();

    job(function () {
        // decrement working count
        self.working--;

        process.nextTick(function () {
            self.work();
        });
    });
}

Queue.prototype.pause = function () {
    this.run = false;
}

Queue.prototype.resume = function () {
    this.run = true;

    var self = this;
    process.nextTick(function () {
        self.work();
    });
}

Queue.prototype.length = function () {
    return (this.jobs.length);
}
