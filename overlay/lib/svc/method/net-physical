#!/sbin/sh
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright (c) 1999, 2010, Oracle and/or its affiliates. All rights reserved.
#
# Copyright (c) 1984, 1986, 1987, 1988, 1989 AT&T.
# All rights reserved.
#

. /lib/svc/share/smf_include.sh

#
# In a shared-IP zone we need this service to be up, but all of the work
# it tries to do is irrelevant (and will actually lead to the service 
# failing if we try to do it), so just bail out. 
# In the global zone and exclusive-IP zones we proceed.
#
smf_configure_ip || exit $SMF_EXIT_OK


# Make sure that the libraries essential to this stage of booting can be found.
LD_LIBRARY_PATH=/lib; export LD_LIBRARY_PATH

smf_netstrategy

# wait for /dev to get populated. *sigh*
sleep 1

if smf_is_globalzone; then
    dladm init-phys
    if [[ `/bin/bootparams | grep "headnode=true"` ]]; then
        headnode="true"
    fi
    # future:
    #eval `/bin/bootparams`

#    if [[ $headnode == 'true' ]]; then
#        . /mnt/config
#    else
        admin_nic=`/usr/bin/bootparams | grep "admin_nic" | cut -f2 -d'='`
        admin_ip=`/usr/bin/bootparams | grep "admin_ip" | cut -f2 -d'='`
        admin_netmask=`/usr/bin/bootparams | grep "admin_netmask" | cut -f2 -d'='`
#    fi

    dladm show-phys -m -p -o link,address | sed 's/:/\ /;s/\\//g' | while read iface mac; do
        if [[ $mac == $admin_nic ]]; then
            ifconfig $iface plumb
            if [[ $headnode == "true" ]]; then
                ifconfig $iface inet $admin_ip netmask $admin_netmask up
            else
                ifconfig $iface dhcp
            fi
        fi
    done

else
    for iface in `dladm show-vnic -p -o link`; do
        ifconfig $iface plumb
        if [[ -f /etc/hostname.$iface ]]; then
            ifconfig $iface inet `cat /etc/hostname.$iface` up
        fi
    done
fi

# Any non-loopback IPv4 interfaces with usable addresses up?
if [ -n "`/sbin/ifconfig -a4u`" ]; then
    	/sbin/ifconfig -a4u | while read intf addr rest; do
		[ $intf = inet ] && [ $addr != 127.0.0.1 ] &&
		[ $addr != 0.0.0.0 ] && exit $SMF_EXIT_OK
	done && exit $SMF_EXIT_OK
fi

# Any DHCP interfaces started?
[ -n "`/sbin/ifconfig -a4 dhcp status 2>/dev/null`" ] && exit $SMF_EXIT_OK

# Any non-loopback IPv6 interfaces up?
if [ -n "`/sbin/ifconfig -au6`" ]; then
	/sbin/ifconfig -au6 | while read intf addr rest; do
		[ $intf = inet6 ] && [ $addr != ::1/128 ] && exit $SMF_EXIT_OK
	done && exit $SMF_EXIT_OK
fi

# This service was supposed to configure something yet didn't.  Exit
# with config error.
exit $SMF_EXIT_ERR_CONFIG
